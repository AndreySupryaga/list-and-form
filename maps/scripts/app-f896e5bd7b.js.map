{"version":3,"sources":["scripts/app.js"],"names":["angular","module","service","$uibModal","user","modalInstance","open","templateUrl","controller","$scope","userModel","copy","ok","equals","close","cancel","dismiss","result","title","descr","MainController","$filter","usersApi","confirmDialog","userDelete","firstName","lastName","then","del","id","response","filterUserList","filteredData","ageRange","rangeArr","split","searchTerm","sortType","sortReverse","pagesLength","length","limit","currentPage","userList","getAll","loader","$watch","$inject","$route","$window","$location","init","current","params","userId","formTitle","getUsersData","get","userModelCache","userEdit","put","userForm","$setPristine","userAdd","post","path","history","back","resetChanges","cancelForm","users","directive","navMenuStructure","currentPath","links","selectSection","restrict","filter","items","min","max","parseInt","Number","MAX_VALUE","i","age","push","value","href","config","$routeProvider","when","otherwise","redirectTo","$http","$q","toastr","getUsers","JSON","parse","localStorage","getItem","putUsers","data","setItem","stringify","getUserById","getIndexItem","getMaxId","maxId","resolve","that","this","success","splice","runBlock","$rootScope","run","toastrConfig","$uibTooltipProvider","options","popupDelay","allowHtml","timeOut","positionClass","progressBar","$templateCache"],"mappings":"CAAA,WACI,YAEAA,SACKC,OAAO,OACJ,YACA,eACA,UACA,SACA,kBAKZ,WACI,YAEAD,SACKC,OAAO,OACPC,QAAQ,kBAAA,YAAkB,SAAUC,GACjC,MAAO,UAAUC,GACb,GAAIC,GAAgBF,EAAUG,MAC1BC,YAAa,qDACbC,YAAA,SAAY,SAAUC,GAClBA,EAAOC,UAAYV,QAAQW,KAAKP,GAChCK,EAAOG,GAAK,WACRZ,QAAQa,OAAOT,EAAMK,EAAOC,WACxBL,EAAcS,QACdT,EAAcS,MAAML,EAAOC,YAEnCD,EAAOM,OAAS,WACZV,EAAcW,QAAQ,cAIlC,OAAOX,GAAcY,cAMrC,WACI,YAEAjB,SACKC,OAAO,OACPC,QAAQ,iBAAA,YAAiB,SAAUC,GAChC,MAAO,UAAUe,EAAOC,GACpB,GAAId,GAAgBF,EAAUG,MAC1BC,YAAa,kDACbC,YAAA,SAAY,SAAUC,GAClBA,EAAOS,MAAQA,EACfT,EAAOU,MAAQA,EACfV,EAAOG,GAAK,WACRP,EAAcS,SAElBL,EAAOM,OAAS,WACZV,EAAcW,QAAQ,cAIlC,OAAOX,GAAcY,cAMrC,WACI,YAMA,SAASG,GAAeX,EAAQY,EAASC,EAAUC,GA8B/C,QAASC,GAAWpB,GAChB,GAAIc,GAAQ,cACRC,EAAQ,6BAA+Bf,EAAKqB,UAAY,IAAMrB,EAAKsB,QACvEH,GAAcL,EAAOC,GAChBQ,KAAK,WACFL,EAASM,IAAIxB,EAAKyB,IAAIF,KAAK,SAAUG,GACjCrB,EAAOC,UAAYoB,EACnBC,QAShB,QAASA,KACL,GAAIC,EACJ,IAAIvB,EAAOwB,SAAU,CACjB,GAAIC,GAAWzB,EAAOwB,SAASE,MAAM,IACrCD,GAAWA,EAAS,GAAKA,EAAWzB,EAAOwB,SAASE,MAAM,KAC1DH,EAAeX,EAAQ,eAAeZ,EAAOC,UAAWwB,EAAS,GAAIA,EAAS,IAOlF,MALAF,GAAeX,EAAQ,UAAUW,EAAcvB,EAAO2B,YACtDJ,EAAeX,EAAQ,WAAWW,EAAcvB,EAAO4B,SAAU5B,EAAO6B,aACxE7B,EAAO8B,YAAcP,EAAaQ,OAClCR,EAAeX,EAAQ,WAAWW,EAAcvB,EAAOgC,MAA8B,IAAvBhC,EAAOiC,YAAoB,GAAKjC,EAAOiC,YAAc,GAAKjC,EAAOgC,OAC/HhC,EAAOkC,SAAWX,EACXvB,EAAOkC,SAxDlBlC,EAAOgC,MAAQ,KACfhC,EAAOiC,YAAc,IACrBjC,EAAOwB,SAAW,MAClBxB,EAAOC,aACPD,EAAOe,WAAaA,EAOpBF,EAASsB,SAASjB,KAAK,SAAUG,GAC7BrB,EAAOC,UAAYoB,EACnBC,IACAtB,EAAOoC,QAAS,IAMpBpC,EAAOqC,OAAO,0DAA2D,WACrEf,MACD,GA5BPX,EAAe2B,SAAW,SAAU,UAAW,WAAY,iBAA3D/C,QACKC,OAAO,OACPO,WAAW,gBAAiBY,MAkErC,WACI,YAMA,SAASA,GAAeX,EAAQuC,EAAQC,EAASC,EAAW5B,EAAUC,GAalE,QAAS4B,KACDH,EAAOI,QAAQC,OAAOxB,IACtBpB,EAAO6C,OAASN,EAAOI,QAAQC,OAAOxB,GACtCpB,EAAO8C,UAAY,YACnBC,MAEA/C,EAAO8C,UAAY,WACnB9C,EAAOoC,QAAS,GAOxB,QAASW,KACL,MAAOlC,GAASmC,IAAIhD,EAAO6C,QAAQ3B,KAAK,SAAUG,GAC9CrB,EAAOC,UAAYoB,EACnB4B,EAAiB1D,QAAQW,KAAKF,EAAOC,WACrCD,EAAOoC,QAAS,IASxB,QAASc,GAASvD,GACdkB,EAASsC,IAAIxD,GAAMuB,KAAK,SAAUG,GAC9BrB,EAAOC,UAAYoB,EACnB4B,EAAiB1D,QAAQW,KAAKF,EAAOC,WACrCD,EAAOoD,SAASC,iBAQxB,QAASC,GAAQ3D,GACbkB,EAAS0C,KAAK5D,GAAMuB,KAAK,SAAUG,GAC/BoB,EAAUe,KAAK,cAAgBnC,EAASD,MAQhD,QAASL,GAAWpB,GAChB,GAAIc,GAAQ,cACRC,EAAQ,6BAA+Bf,EAAKqB,UAAY,IAAMrB,EAAKsB,QACvEH,GAAcL,EAAOC,GAChBQ,KAAK,WACFL,EAASM,IAAIxB,EAAKyB,IAClBoB,EAAQiB,QAAQC,SAO5B,QAASC,KACL3D,EAAOC,UAAYgD,EAMvB,QAASW,KACLpB,EAAQiB,QAAQC,OAjFpB,GAAIT,GAAiB,IACrBjD,GAAO6D,SACP7D,EAAOC,aACPD,EAAOsD,QAAUA,EACjBtD,EAAOkD,SAAWA,EAClBlD,EAAOe,WAAaA,EACpBf,EAAO2D,aAAeA,EACtB3D,EAAO4D,WAAaA,EAEpBlB,IAdJ/B,EAAe2B,SAAW,SAAU,SAAU,UAAW,YAAa,WAAY,iBADlF/C,QACKC,OAAO,OACPO,WAAW,eAAgBY,MA2FpC,WACI,YAEApB,SACKC,OAAO,OACPsE,UAAU,UAAW,WAClB,OACI/D,YAAA,SAAA,YAAA,mBAAY,SAAUC,EAAQyC,EAAYsB,GACtC/D,EAAOgE,YAAc,KAAOvB,EAAUe,OACtCxD,EAAOiE,MAAQF,EACf/D,EAAOkE,cAAgB,SAAUV,GAC7BxD,EAAOgE,YAAcR,KAG7BW,SAAU,KACVrE,YAAa,yCAI7B,WACI,YASAP,SAAQC,OAAO,OACV4E,OAAO,cAAe,WACnB,MAAO,UAAUC,EAAOC,EAAKC,GACzB,GAAI/D,KAGJ,IAFA8D,EAAME,SAASF,GACfC,EAAMC,SAASD,IAAQE,OAAOC,UAC1BJ,EAAK,CACL,IAAK,GAAIK,GAAI,EAAGA,EAAIN,EAAMtC,OAAQ4C,IAC1BN,EAAMM,GAAGC,KAAON,GAAOD,EAAMM,GAAGC,KAAOL,GACvC/D,EAAOqE,KAAKR,EAAMM,GAG1B,OAAOnE,GAEX,MAAO6D,SAMvB,WACI,YAEA9E,SACKC,OAAO,OACPsF,MAAM,qBAECrE,MAAO,kBACPsE,KAAM,gBAGNtE,MAAO,iBACPsE,KAAM,eAGNtE,MAAO,WACPsE,KAAM,iBAMtB,WACI,YAEAxF,SAAQC,OAAO,OACVwF,QAAA,iBAAO,SAAUC,GACdA,EACKC,KAAK,gBACFpF,YAAa,kDACbC,WAAY,kBAEfmF,KAAK,eACFpF,YAAa,gDACbC,WAAY,kBAEfmF,KAAK,kBACFpF,YAAa,0CACbC,WAAY,iBAEfmF,KAAK,aACFpF,YAAa,0CACbC,WAAY,iBAEfoF,WACGC,WAAY,uBAIhC,WACI,YAEA7F,SACKC,OAAO,OACPC,QAAQ,YAAA,QAAA,KAAA,SAAY,SAAU4F,EAAOC,EAAIC,GAmFtC,QAASC,KACL,MAAOC,MAAKC,MAAMC,aAAaC,QAAQ,eAG3C,QAASC,GAASC,GAEd,MADAH,cAAaI,QAAQ,aAAcN,KAAKO,UAAUF,IAC3CN,IAGX,QAASS,GAAY7E,GACjB,GAAIyC,GAAQ2B,GACZ,OAAO3B,GAAMqC,EAAa9E,IAG9B,QAAS8E,GAAa9E,GAElB,IAAK,GADDyC,GAAQ2B,IACHb,EAAI,EAAGA,EAAId,EAAM9B,OAAQ4C,IAC9B,GAAId,EAAMc,GAAGvD,IAAMA,EAChB,MAAOuD,GAKlB,QAASwB,GAASL,GAEd,IAAI,GADAM,GAAQ,EACJzB,EAAI,EAAGA,EAAImB,EAAK/D,OAAQ4C,IACzByB,EAAQN,EAAKnB,GAAGvD,KACfgF,EAAQN,EAAKnB,GAAGvD,GAGxB,OAAOgF,GAhHX,OAMIjE,OAAQ,WACJ,MAAIqD,KACOF,EAAG,SAAUe,GAChBA,EAAQb,OAGLH,EAAMrC,IAAI,6BAA6B9B,KAAK,SAAUG,GAEzD,MADAwE,GAASxE,EAASyE,MACXzE,EAASyE,QAS5B9C,IAAK,SAAU5B,GACX,GAAIkF,GAAOC,IACX,OAAOjB,GAAG,SAAUe,GAChB,MAAIb,SACAa,GAAQJ,EAAY7E,IAEbkF,EAAKnE,SAASjB,KAAK,WACtBmF,EAAQJ,EAAY7E,SAUpCmC,KAAM,SAAU5D,GACZ,GAAIkE,GAAQ2B,GAIZ,OAHA7F,GAAKyB,GAAK+E,EAAStC,GAAS,EAC5BA,EAAMgB,KAAKlF,GACXkG,EAAShC,GACFyB,EAAG,SAAUe,GAChBd,EAAOiB,QAAQ,mBAAoB,WACnCH,EAAQ1G,MAQhBwD,IAAK,SAAUxD,GACX,GAAIkE,GAAQ2B,GAGZ,OAFA3B,GAAMqC,EAAavG,EAAKyB,KAAOzB,EAC/BkG,EAAShC,GACFyB,EAAG,SAAUe,GAChBd,EAAOiB,QAAQ,UAAW,WAC1BH,EAAQ1G,MAQhBwB,IAAK,SAAUC,GACX8E,EAAa9E,EACb,IAAIyC,GAAQ2B,GAGZ,OAFA3B,GAAM4C,OAAOP,EAAa9E,GAAK,GAC/ByE,EAAShC,GACFyB,EAAG,SAAUe,GAChBd,EAAOiB,QAAQ,UAAW,WAC1BH,EAAQxC,aA0ChC,WACI,YAOA,SAAS6C,GAASC,GACdA,EAAWvE,QAAS,EAJxBsE,EAASpE,SAAW,cAFpB/C,QACKC,OAAO,OACPoH,IAAIF,MASb,WACI,YAOA,SAAS1B,GAAO6B,EAAcC,GAG1BA,EAAoBC,SAASC,WAAY,MACzCH,EAAaI,WAAY,EACzBJ,EAAaK,QAAU,IACvBL,EAAaM,cAAgB,qBAC7BN,EAAaO,aAAc,EAT/BpC,EAAO1C,SAAW,eAAgB,uBAHlC/C,QACKC,OAAO,OACPwF,OAAOA,MAehBzF,QAAQC,OAAO,OAAOoH,KAAK,iBAAkB,SAASS,GAAiBA,EAAelE,IAAI,mCAAmC,2sBAC7HkE,EAAelE,IAAI,0CAA0C,g/EAC7DkE,EAAelE,IAAI,kDAAkD,4RACrEkE,EAAelE,IAAI,qDAAqD,q3BACxEkE,EAAelE,IAAI,kDAAkD,kwEACrEkE,EAAelE,IAAI,gDAAgD","file":"scripts/app-f896e5bd7b.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('app', [\n            'ngAnimate',\n            'ui.bootstrap',\n            'ngRoute',\n            'toastr',\n            'ngMessages'\n        ]);\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .service('userEditDialog', function ($uibModal) {\n            return function (user) {\n                var modalInstance = $uibModal.open({\n                    templateUrl: 'app/services/dialog/userEdit/user.edit.dialog.html',\n                    controller: function ($scope) {\n                        $scope.userModel = angular.copy(user);\n                        $scope.ok = function () {\n                            angular.equals(user, $scope.userModel) ?\n                                modalInstance.close() :\n                                modalInstance.close($scope.userModel);\n                        };\n                        $scope.cancel = function () {\n                            modalInstance.dismiss('cancel');\n                        };\n                    }\n                });\n                return modalInstance.result;\n            }\n        });\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .service('confirmDialog', function ($uibModal) {\n            return function (title, descr) {\n                var modalInstance = $uibModal.open({\n                    templateUrl: 'app/services/dialog/confirm/confirm.dialog.html',\n                    controller: function ($scope) {\n                        $scope.title = title;\n                        $scope.descr = descr;\n                        $scope.ok = function () {\n                            modalInstance.close();\n                        };\n                        $scope.cancel = function () {\n                            modalInstance.dismiss('cancel');\n                        };\n                    }\n                });\n                return modalInstance.result;\n            }\n        });\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('usersGridCtrl', MainController);\n\n    function MainController($scope, $filter, usersApi, confirmDialog) {\n\n        $scope.limit = '10';\n        $scope.currentPage = '1';\n        $scope.ageRange = 'all';\n        $scope.userModel = [];\n        $scope.userDelete = userDelete;\n\n        /**\n         * Getting users data\n         */\n\n\n        usersApi.getAll().then(function (response) {\n            $scope.userModel = response;\n            filterUserList();\n            $scope.loader = false;\n        });\n\n        /**\n         * Watch for filter data\n         */\n        $scope.$watch('[currentPage, limit, sortReverse, searchTerm, ageRange]', function () {\n            filterUserList();\n        }, true);\n        \n        /**\n         * Delete select user in dialog window\n         * @param {Object} user - User data\n         */\n        function userDelete(user) {\n            var title = 'Delete user';\n            var descr = 'You really want to delete ' + user.firstName + ' ' + user.lastName;\n            confirmDialog(title, descr)\n                .then(function () {\n                    usersApi.del(user.id).then(function (response) {\n                        $scope.userModel = response;\n                        filterUserList();\n                    });\n                });\n        }\n        \n        /**\n         * Filter for users\n         * @returns {Array} {*} - Array with filtered user\n         */\n        function filterUserList() {\n            var filteredData;\n            if ($scope.ageRange) {\n                var rangeArr = $scope.ageRange.split('-');\n                rangeArr = rangeArr[1] ? rangeArr : $scope.ageRange.split('+');\n                filteredData = $filter('rangeFilter')($scope.userModel, rangeArr[0], rangeArr[1]);\n            }\n            filteredData = $filter('filter')(filteredData, $scope.searchTerm);\n            filteredData = $filter('orderBy')(filteredData, $scope.sortType, $scope.sortReverse);\n            $scope.pagesLength = filteredData.length;\n            filteredData = $filter('limitTo')(filteredData, $scope.limit, $scope.currentPage === 1 ? 0 : ($scope.currentPage - 1) * $scope.limit);\n            $scope.userList = filteredData;\n            return $scope.userList;\n        }\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('userFormCtrl', MainController);\n\n    function MainController($scope, $route, $window, $location, usersApi, confirmDialog) {\n\n        var userModelCache = null;\n        $scope.users = [];\n        $scope.userModel = {};\n        $scope.userAdd = userAdd;\n        $scope.userEdit = userEdit;\n        $scope.userDelete = userDelete;\n        $scope.resetChanges = resetChanges;\n        $scope.cancelForm = cancelForm;\n\n        init();\n\n        function init() {\n            if ($route.current.params.id) {\n                $scope.userId = $route.current.params.id;\n                $scope.formTitle = 'Edit user';\n                getUsersData();\n            } else {\n                $scope.formTitle = 'Add user';\n                $scope.loader = false;\n            }\n        }\n\n        /**\n         * Getting users data by id\n         */\n        function getUsersData() {\n            return usersApi.get($scope.userId).then(function (response) {\n                $scope.userModel = response;\n                userModelCache = angular.copy($scope.userModel);\n                $scope.loader = false;\n            });\n        }\n\n\n        /**\n         * Save user\n         * @param {Object} user - User data\n         */\n        function userEdit(user) {\n            usersApi.put(user).then(function (response) {\n                $scope.userModel = response;\n                userModelCache = angular.copy($scope.userModel);\n                $scope.userForm.$setPristine();\n            });\n        }\n\n        /**\n         * Add new user to users data\n         * @param {Object} user - User data\n         */\n        function userAdd(user) {\n            usersApi.post(user).then(function (response) {\n                $location.path('/user/edit/' + response.id);\n            });\n        }\n\n        /**\n         * Delete select user with confirm dialog\n         * @param {Object} user - User data\n         */\n        function userDelete(user) {\n            var title = 'Delete user';\n            var descr = 'You really want to delete ' + user.firstName + ' ' + user.lastName;\n            confirmDialog(title, descr)\n                .then(function () {\n                    usersApi.del(user.id);\n                    $window.history.back();\n                });\n        }\n\n        /**\n         * Reset changes\n         */\n        function resetChanges() {\n            $scope.userModel = userModelCache;\n        }\n\n        /**\n         * Exit from form\n         */\n        function cancelForm() {\n            $window.history.back();\n        }\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .directive('navMenu', function () {\n            return {\n                controller: function ($scope, $location , navMenuStructure) {\n                    $scope.currentPath = '/#' + $location.path();\n                    $scope.links = navMenuStructure;\n                    $scope.selectSection = function (path) {\n                        $scope.currentPath = path;\n                    };\n                },\n                restrict: 'AE',\n                templateUrl: 'app/directive/menu/nav.menu.html'\n            };\n        });\n})();\n(function () {\n    'use strict';\n\n    /**\n     * Range filter for age.\n     * @param items {Array}\n     * @param min {Number}\n     * @param max {Number}\n     * @returns {function}\n     */\n    angular.module('app')\n        .filter('rangeFilter', function () {\n            return function (items, min, max) {\n                var result = [];\n                min = parseInt(min);\n                max = parseInt(max) || Number.MAX_VALUE;\n                if (min) {\n                    for (var i = 0; i < items.length; i++) {\n                        if (items[i].age >= min && items[i].age <= max) {\n                            result.push(items[i]);\n                        }\n                    }\n                    return result;\n                }\n                return items;\n            };\n        })\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .value('navMenuStructure', [\n            {\n                title: 'Item table view',\n                href: 'users/table'\n            },\n            {\n                title: 'Item tile view',\n                href: 'users/tile'\n            },\n            {\n                title: 'Add user',\n                href: 'user/add'\n            }\n        ]);\n\n})();\n\n(function () {\n    'use strict';\n\n    angular.module('app')\n        .config(function ($routeProvider) {\n            $routeProvider\n                .when('/users/table', {\n                    templateUrl: 'app/components/user/grid/table/users.table.html',\n                    controller: 'usersGridCtrl'\n                })\n                .when('/users/tile', {\n                    templateUrl: 'app/components/user/grid/tile/users.tile.html',\n                    controller: 'usersGridCtrl'\n                })\n                .when('/user/edit/:id', {\n                    templateUrl: 'app/components/user/form/user.form.html',\n                    controller: 'userFormCtrl'\n                })\n                .when('/user/add', {\n                    templateUrl: 'app/components/user/form/user.form.html',\n                    controller: 'userFormCtrl'\n                })\n                .otherwise({\n                    redirectTo: '/users/table'\n                });\n        });\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .service('usersApi', function ($http, $q, toastr) {\n            return {\n\n                /**\n                 * Getting all users data\n                 * @returns {Promise}\n                 */\n                getAll: function () {\n                    if (getUsers()) {\n                        return $q(function (resolve) {\n                            resolve(getUsers());\n                        })\n                    } else {\n                        return $http.get('app/backend/userList.json').then(function (response) {\n                            putUsers(response.data);\n                            return response.data;\n                        });\n                    }\n                },\n\n                /**\n                 * Getting user by id\n                 * @returns {Promise}\n                 */\n                get: function (id) {\n                    var that = this;\n                    return $q(function (resolve) {\n                        if (getUsers()) {\n                            resolve(getUserById(id));\n                        } else {\n                            return that.getAll().then(function () {\n                                resolve(getUserById(id));\n                            });\n                        }\n                    })\n                },\n\n                /**\n                 * Creating new user\n                 * @returns {Promise}\n                 */\n                post: function (user) {\n                    var users = getUsers();\n                    user.id = getMaxId(users) + 1;\n                    users.push(user);\n                    putUsers(users);\n                    return $q(function (resolve) {\n                        toastr.success('Created new user', 'Success');\n                        resolve(user);\n                    })\n                },\n\n                /**\n                 * Changing user\n                 * @returns {Promise}\n                 */\n                put: function (user) {\n                    var users = getUsers();\n                    users[getIndexItem(user.id)] = user;\n                    putUsers(users);\n                    return $q(function (resolve) {\n                        toastr.success('Updated', 'Success');\n                        resolve(user);\n                    })\n                },\n\n                /**\n                 * Deleting user\n                 * @returns {Promise}\n                 */\n                del: function (id) {\n                    getIndexItem(id);\n                    var users = getUsers();\n                    users.splice(getIndexItem(id), 1);\n                    putUsers(users);\n                    return $q(function (resolve) {\n                        toastr.success('Deleted', 'Success');\n                        resolve(users);\n                    })\n                }\n                \n            };\n\n            function getUsers() {\n                return JSON.parse(localStorage.getItem('usersModel'));\n            }\n\n            function putUsers(data) {\n                localStorage.setItem('usersModel', JSON.stringify(data));\n                return getUsers();\n            }\n\n            function getUserById(id) {\n                var users = getUsers();\n                return users[getIndexItem(id)];\n            }\n\n            function getIndexItem(id) {\n                var users = getUsers();\n                for (var i = 0; i < users.length; i++) {\n                    if (users[i].id == id) {\n                       return i;\n                    }\n                }\n            }\n\n            function getMaxId(data) {\n                var maxId = 0;\n                for(var i = 0; i < data.length; i++){\n                    if(maxId < data[i].id){\n                        maxId = data[i].id\n                    }\n                }\n                return maxId;\n            }\n        });\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope) {\n        $rootScope.loader = true;\n    }\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .config(config);\n\n    /** @ngInject */\n    function config(toastrConfig, $uibTooltipProvider) {\n        \n        // Set options third-party lib\n        $uibTooltipProvider.options({popupDelay: 400});\n        toastrConfig.allowHtml = true;\n        toastrConfig.timeOut = 3000;\n        toastrConfig.positionClass = 'toast-bottom-right';\n        toastrConfig.progressBar = true;\n    }\n\n})();\n\nangular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/directive/menu/nav.menu.html\",\"<nav class=\\\"navbar navbar-default navbar-fixed-top\\\" role=navigation><div class=navbar-header><button type=button class=navbar-toggle ng-click=\\\"isNavCollapsed = !isNavCollapsed\\\"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a href=https://github.com/AndreySupryaga/list-and-form class=navbar-brand>View on GitHub</a></div><div class=\\\"collapse navbar-collapse\\\" uib-collapse=isNavCollapsed><ul class=\\\"nav navbar-nav\\\"><li ng-repeat=\\\"link in links track by $index\\\"><a ng-href={{::link.href}} ng-click=selectSection(link.href) ng-class=\\\"{\\'active\\' : link.href === currentPath}\\\">{{::link.title}}</a></li></ul></div></nav>\");\n$templateCache.put(\"app/components/user/form/user.form.html\",\"<div class=container><div class=loader-container ng-show=loader><div class=loader></div></div><div class=row><div class=\\\"col-md-6 col-md-offset-3\\\"><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title>{{::formTitle}}</h3></div><div class=panel-body><form class=form-horizontal name=userForm><div class=form-group><label for=firstName class=\\\"col-sm-4 control-label\\\">First Name</label><div class=col-sm-8><input ng-model=userModel.firstName name=firstName class=form-control id=firstName placeholder=\\\"First Name\\\" required><div ng-messages=userForm.firstName.$error ng-if=userForm.firstName.$dirty><div ng-message=required>This field is required</div></div></div></div><div class=form-group><label for=lastName class=\\\"col-sm-4 control-label\\\">Last Name</label><div class=col-sm-8><input ng-model=userModel.lastName name=lastName class=form-control id=lastName placeholder=\\\"Last Name\\\" required><div ng-messages=userForm.lastName.$error ng-if=userForm.lastName.$dirty><div ng-message=required>This field is required</div></div></div></div><div class=form-group><label for=email class=\\\"col-sm-4 control-label\\\">Email address</label><div class=col-sm-8><input ng-model=userModel.email name=email type=email class=form-control id=email placeholder=\\\"Email address\\\" required><div ng-messages=userForm.email.$error ng-if=userForm.email.$dirty><div ng-message=required>This field is required</div><div ng-message=email>Your email address is invalid</div></div></div></div><div class=form-group><label for=age class=\\\"col-sm-4 control-label\\\">Age</label><div class=col-sm-8><input ng-model=userModel.age name=age type=number class=form-control id=age placeholder=Age required><div ng-messages=userForm.age.$error ng-if=userForm.age.$dirty><div ng-message=required>This field is required</div></div></div></div><div class=\\\"form-group text-center\\\"><span ng-if=userId><button ng-click=userDelete(userModel) type=button class=\\\"btn btn-danger\\\">Delete</button> <button ng-click=userEdit(userModel) ng-disabled=\\\"userForm.$invalid || userForm.$pristine\\\" class=\\\"btn btn-success\\\">Save changes</button> <button ng-click=resetChanges() ng-disabled=\\\"userForm.$invalid || userForm.$pristine\\\" type=button class=\\\"btn btn-warning\\\">Reset changes</button> </span><button ng-if=!userId ng-click=userAdd(userModel) ng-disabled=\\\"userForm.$invalid || userForm.$pristine\\\" type=button class=\\\"btn btn-success\\\">Save changes</button> <button ng-click=cancelForm() type=button class=\\\"btn bt n-default\\\">Cancel</button></div></form></div></div></div></div></div>\");\n$templateCache.put(\"app/services/dialog/confirm/confirm.dialog.html\",\"<div class=modal-header><h3 class=modal-title>{{title}}</h3></div><div class=modal-body>{{descr}}</div><div class=modal-footer><button class=\\\"btn btn-primary\\\" type=button ng-click=ok()>OK</button> <button class=\\\"btn btn-warning\\\" type=button ng-click=cancel()>Cancel</button></div>\");\n$templateCache.put(\"app/services/dialog/userEdit/user.edit.dialog.html\",\"<div class=modal-header><h3 class=modal-title>Edit item</h3></div><div class=modal-body><form><div class=form-group><label for=firstName>First Name</label><input ng-model=userModel.firstName class=form-control id=firstName placeholder=\\\"First Name\\\"></div><div class=form-group><label for=lastName>Last Name</label><input ng-model=userModel.lastName class=form-control id=lastName placeholder=\\\"Last Name\\\"></div><div class=form-group><label for=email>Email address</label><input ng-model=userModel.email class=form-control id=email placeholder=Email></div><div class=form-group><label for=age>Age</label><input ng-model=userModel.age class=form-control id=age placeholder=Age type=number></div></form></div><div class=modal-footer><button class=\\\"btn btn-primary\\\" type=button ng-click=ok()>OK</button> <button class=\\\"btn btn-warning\\\" type=button ng-click=cancel()>Cancel</button></div>\");\n$templateCache.put(\"app/components/user/grid/table/users.table.html\",\"<div><div class=loader-container ng-show=loader><div class=loader></div></div><div class=container><div class=row><div class=pull-right><ul uib-pagination total-items=pagesLength items-per-page=limit ng-model=currentPage max-size=maxSize class=pagination-sm boundary-links=true></ul></div><div class=\\\"pull-right limit-select\\\"><select ng-model=limit class=form-control><option value=5>5</option><option value=10>10</option><option value=25>25</option><option value=all>all</option></select></div></div></div><div class=container><table class=\\\"table table-bordered table-striped\\\"><thead><tr><th ng-click=\\\"sortType = \\'firstName\\'; sortReverse = !sortReverse\\\">First Name <span ng-show=\\\"sortType == \\'firstName\\' && !sortReverse\\\">+</span> <span ng-show=\\\"sortType == \\'firstName\\' && sortReverse\\\">-</span></th><th ng-click=\\\"sortType = \\'lastName\\'; sortReverse = !sortReverse\\\">Last Name <span ng-show=\\\"sortType == \\'lastName\\' && !sortReverse\\\">+</span> <span ng-show=\\\"sortType == \\'lastName\\' && sortReverse\\\">-</span></th><th ng-click=\\\"sortType = \\'email\\'; sortReverse = !sortReverse\\\">Email <span ng-show=\\\"sortType == \\'email\\' && !sortReverse\\\">+</span> <span ng-show=\\\"sortType == \\'email\\' && sortReverse\\\">-</span></th><th ng-click=\\\"sortType = \\'age\\'; sortReverse = !sortReverse\\\">Age <span ng-show=\\\"sortType == \\'age\\' && !sortReverse\\\">+</span> <span ng-show=\\\"sortType == \\'age\\' && sortReverse\\\">-</span></th><th></th></tr></thead><tbody><tr><td><input ng-model=searchTerm.firstName class=form-control></td><td><input ng-model=searchTerm.lastName class=form-control></td><td><input ng-model=searchTerm.email class=form-control></td><td style=\\\"width: 120px\\\"><select ng-model=ageRange class=form-control><option value=10-20>10-20</option><option value=21-30>21-30</option><option value=31-40>31-40</option><option value=40+>40+</option><option value=all>all</option></select></td><td></td></tr><tr ng-repeat=\\\"user in userList\\\"><td><a ng-href=/#/user/edit/{{::user.id}}>{{::user.firstName}}</a></td><td>{{::user.lastName}}</td><td>{{::user.email}}</td><td>{{::user.age}}</td><td><a class=\\\"btn btn-info btn-circle\\\" ng-href=/#/user/edit/{{::user.id}} uib-tooltip=Edit>e</a> <button class=\\\"btn btn-danger btn-circle\\\" ng-click=userDelete(user) uib-tooltip=Remove>d</button></td></tr></tbody></table></div></div>\");\n$templateCache.put(\"app/components/user/grid/tile/users.tile.html\",\"<div><div class=loader-container ng-show=loader><div class=loader></div></div><div class=container><div class=row><div class=pull-right><ul uib-pagination total-items=pagesLength items-per-page=limit ng-model=currentPage max-size=maxSize class=pagination-sm boundary-links=true></ul></div><div class=\\\"pull-right limit-select\\\"><select ng-model=limit class=form-control><option value=5>5</option><option value=10>10</option><option value=25>25</option><option value=all>all</option></select></div></div></div><div class=container><table class=\\\"table table-bordered table-striped\\\"><thead><tr><th ng-click=\\\"sortType = \\'firstName\\'; sortReverse = !sortReverse\\\">First Name <span ng-show=\\\"sortType == \\'firstName\\' && !sortReverse\\\">+</span> <span ng-show=\\\"sortType == \\'firstName\\' && sortReverse\\\">-</span></th><th ng-click=\\\"sortType = \\'lastName\\'; sortReverse = !sortReverse\\\">Last Name <span ng-show=\\\"sortType == \\'lastName\\' && !sortReverse\\\">+</span> <span ng-show=\\\"sortType == \\'lastName\\' && sortReverse\\\">-</span></th><th ng-click=\\\"sortType = \\'email\\'; sortReverse = !sortReverse\\\">Email <span ng-show=\\\"sortType == \\'email\\' && !sortReverse\\\">+</span> <span ng-show=\\\"sortType == \\'email\\' && sortReverse\\\">-</span></th><th ng-click=\\\"sortType = \\'age\\'; sortReverse = !sortReverse\\\">Age <span ng-show=\\\"sortType == \\'age\\' && !sortReverse\\\">+</span> <span ng-show=\\\"sortType == \\'age\\' && sortReverse\\\">-</span></th><th></th></tr></thead><tbody><tr><td><input ng-model=searchTerm.firstName class=form-control></td><td><input ng-model=searchTerm.lastName class=form-control></td><td><input ng-model=searchTerm.email class=form-control></td><td style=\\\"width: 120px\\\"><select ng-model=ageRange class=form-control><option value=10-20>10-20</option><option value=21-30>21-30</option><option value=31-40>31-40</option><option value=40+>40+</option><option value=all>all</option></select></td><td></td></tr></tbody></table></div><div class=container><div class=row><div class=\\\"col-sm-4 col-md-3\\\" ng-repeat=\\\"user in userList\\\"><div class=thumbnail><img src=# alt=...><div class=caption><h3><a ng-href=/#/user/edit/{{::user.id}}>{{user.firstName}}<br>{{user.lastName}}</a></h3><p>{{::user.email}}</p><p>{{::user.age}}</p><p><a ng-href=/#/user/edit/{{::user.id}} class=\\\"btn btn-primary\\\" role=button>Edit</a> <button ng-click=userDelete(user) class=\\\"btn btn-danger\\\" role=button>Delete</button></p></div></div></div></div></div></div>\");}]);"],"sourceRoot":"/source/"}